# Build stage - Use Node.js 20 for react-router-dom compatibility
FROM node:20-alpine as build

WORKDIR /app

# Enable corepack for yarn (built into Node.js 16+)
RUN corepack enable

# Copy package files
COPY package*.json ./

# Install dependencies
RUN yarn install --frozen-lockfile

# Copy source code
COPY . .

# Build the app with explicit output directory
RUN yarn build

# Verify build was created
RUN ls -la /app/build

# Production stage - Nginx with better configuration
FROM nginx:alpine

# Remove default nginx config
RUN rm /etc/nginx/conf.d/default.conf

# Copy built app to nginx html directory
COPY --from=build /app/build /usr/share/nginx/html

# Create custom nginx configuration for React Router
RUN echo 'events { worker_connections 1024; }' > /etc/nginx/nginx.conf && \
    echo 'http {' >> /etc/nginx/nginx.conf && \
    echo '  include /etc/nginx/mime.types;' >> /etc/nginx/nginx.conf && \
    echo '  default_type application/octet-stream;' >> /etc/nginx/nginx.conf && \
    echo '  sendfile on;' >> /etc/nginx/nginx.conf && \
    echo '  keepalive_timeout 65;' >> /etc/nginx/nginx.conf && \
    echo '  server {' >> /etc/nginx/nginx.conf && \
    echo '    listen 80;' >> /etc/nginx/nginx.conf && \
    echo '    server_name localhost;' >> /etc/nginx/nginx.conf && \
    echo '    root /usr/share/nginx/html;' >> /etc/nginx/nginx.conf && \
    echo '    index index.html index.htm;' >> /etc/nginx/nginx.conf && \
    echo '    error_log /var/log/nginx/error.log;' >> /etc/nginx/nginx.conf && \
    echo '    access_log /var/log/nginx/access.log;' >> /etc/nginx/nginx.conf && \
    echo '    location / {' >> /etc/nginx/nginx.conf && \
    echo '      try_files $uri $uri/ /index.html;' >> /etc/nginx/nginx.conf && \
    echo '      add_header Cache-Control "no-cache, no-store, must-revalidate";' >> /etc/nginx/nginx.conf && \
    echo '      add_header Pragma "no-cache";' >> /etc/nginx/nginx.conf && \
    echo '      add_header Expires "0";' >> /etc/nginx/nginx.conf && \
    echo '    }' >> /etc/nginx/nginx.conf && \
    echo '    location /static/ {' >> /etc/nginx/nginx.conf && \
    echo '      expires 1y;' >> /etc/nginx/nginx.conf && \
    echo '      add_header Cache-Control "public, immutable";' >> /etc/nginx/nginx.conf && \
    echo '    }' >> /etc/nginx/nginx.conf && \
    echo '  }' >> /etc/nginx/nginx.conf && \
    echo '}' >> /etc/nginx/nginx.conf

# Verify files are copied correctly
RUN ls -la /usr/share/nginx/html

# Test nginx configuration
RUN nginx -t

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]